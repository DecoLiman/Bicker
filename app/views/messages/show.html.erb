<script type="text/javascript">
function toggleReplyForm(e) {
  e.persist();
  var target = e.target;

  while (target.tagName.toLowerCase() !== 'a') {
    target = target.parentNode;
  }

  var id = target.attributes.name.value;
  var formId = `reply-form-${id}`;
  var form = document.getElementById(formId);

  if (form === null) {
    console.log(`can't find ${formId}`);
    return;
  }

  var state = form.style.display;

  if (state === 'block') {
    form.style.display = 'none';
    target.classList.remove('toggled-punctuation-button');
    target.classList.add('punctuation-button');
  } else {
    form.style.display = 'block';
    target.classList.remove('punctuation-button');
    target.classList.add('toggled-punctuation-button');
  }
}

function submitReply(e) {
  e.persist();
  var target = e.target;
  var offset = Number(target.attributes.offset.value);
  var paraId = Number(target.attributes.pid.value);
  var parent = target.parentNode;
  var textarea = parent.childNodes[0];
  var message = encodeURIComponent(textarea.value);
  var request = new XMLHttpRequest();
  var url = `/api/v1/messages/reply?paraId=${paraId}&offset=${offset}&message=${message}`;

  request.open(
    'GET',
    url,
    true
  );
  request.onload = function() {
    if (this.status >= 200 && this.status < 400) {
      var resp = this.response;
      console.log(this.response);
    } else {
      console.error(this);
    }
  };

  request.onerror = function() {
    // There was a connection error of some sort
  };

  request.send();
}
</script>

<p id="notice"><%= notice %></p>

<h2><%= @message.subject %></h2>

<h3>Category: <%= Category.find_by_id(@message.category_id).name %></h3>

<h4>Author: <%= User.find_by_id(@message.user_id).login %></h4>

<% count = 1 %>
<% @paragraphs.each do |para| %>
  <%= react_component 'Paragraph', {
    avatar: para.avatar,
    children: para.children,
    content: {
      __html: para.content
    },
    pid: para.id,
    pnum: count,
    ts: para.created_at.to_formatted_s(:db),
    when: time_ago_in_words(para.created_at),
    who: para.who.login
  } %>
  <% count += 1 %>
<% end %>

<p class="intro-text">
  <%= link_to 'Edit', edit_message_path(@message) %> |
  <%= link_to 'Back', messages_path %>
</p>
